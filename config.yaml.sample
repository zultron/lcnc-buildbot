#                                                           -*-conf-*-
global:
# global settings
#
# buildbot 0.8.6 has no facility for setting the umask (0.8.8 has a
# 'umask' parameter in buildbot.tac), so set in in the configuration;
# this is useful for slaves fetching a gitpoller repo over http
  umask: 022
#
identity:
# the 'title' string will appear at the top of this buildbot
# installation's html.WebStatus home page (linked to the 'titleURL')
# and is embedded in the title of the waterfall HTML page.
  title: Unified Build Candidate
  titleURL: http://www.linuxcnc.org
# the 'buildbotURL' string should point to the location where the
# buildbot's internal web server (usually the html.WebStatus page) is
# visible. This typically uses the port number set in the Waterfall
# 'status' entry, but with an externally-visible host name which the
# buildbot cannot figure out without some help.
  buildbotURL: http://localhost:8010/


changesources:
# changesource configs
#
# These settings tell the buildmaster how it should find out about
# source code changes.
#
# Note: there can be only one GitPoller pointing at a given repository
#
  glo-ubc3:
# Poll the configured branch of the configured git repo every 5
# minutes
#
# buildbot pre-0.8.8 had no 'branches' list, only a 'branch' argument
# with one value.
    type: poller
    repourl: git://git.linuxcnc.org/git/linuxcnc.git
    branches:
      - unified-build-candidate-3
      - master
#   branch: unified-build-candidate-3
    workdir: /home/buildbot/git-repos
    pollinterval: 300
    project: ubc

schedulers:
# scheduler configs
#
# This is unimplemented.  There should be a dict of schedulername :
# schedulerconfigdict pairs, of course.  There should also be a way to
# map builders to schedulers.  As below, I don't understand how these
# interact yet, so for now, the master config is hacked to add two
# hard-wired schedulers 'all' and 'force' and all builders to each
# change source.

buildfactories:
# Build factories with steps
#
# Each build factory contains a list of steps.
#
# If a step has no 'type' attribute, or type is 'script', it is
# assumed to be in the script pointed to by the 'buildsteps-script'
# file, and executed with '<script> <step>'.  If a 'server-side'
# attribute is 'True', the script will be run on the build master
# instead of the slaves.
#
# The 'source.git' type sets up a buildbot.steps.source.git.Git step.
# The below example fetches the repo from a (local) URL into the
# 'repo' subdirectory.
#
# To be implemented: there might need to be a map of buildfactories to
# builderconfigs.  I don't understand how those map together in more
# complex cases, so for now, every factory will get all builders.
  ubc:
    buildsteps-script: buildsteps.sh
    steps:
# run a server-side script that updates the gitpoller repo for sharing
# over http; location of repo will be in $POLLER_REPODIR environment
# variable
      - name: git-web
        description:
          - updating
          - git
          - server
          - info
        server-side: True
        env:
          POLLER_REPODIR: /d/buildbot/git-repos/linuxcnc.git
# First attempt at using buildbot's facilities for fetching the git
# repo
#      - name: init
#        type: source.git
#        description:
#          - fetching
#          - (or cloning)
#          - git repo
#        repourl: http://build-master.example.com/git/linuxcnc.git
#        mode: incremental
#        workdir: repo
#
# Fetch the git repo over http.  Pass the 'revision' property and git
# urls through the environment.
      - name: init
        description:
          - fetching
          - (or cloning)
          - git repo
        env:
          GIT_URL: http://bb0.cf0.zultron.com/git/linuxcnc.git/.git
        env-properties:
          - revision
      - name: sourcetree
        description:
          - unpacking
          - clean
          - source
          - tree
# Run sudo dmesg -c with a tty, which some sudo configs require (RH,
# to avoid cleartext passwords over ssh)
      - name: dmesg
        usePTY: True
        description:
          - read and
          - clear
          - dmesg
          - buffer
      - name: environment
        description:
          - collect
          - environment
          - info
      - name: autogen
        description:
          - autogen
      - name: configure
        description:
          - configure
      - name: make
        description:
          - make
      - name: setuid
        usePTY: True
        description:
          - make
          - setuid
      - name: runtests
        description:
          - runtests
      - name: closeout
        description:
          - read
          - dmesg
          - buffer


slaves:
# build slave -> password map
#
# Slaves commented out will be implemented in the future
#
# Passwords may be generated with
#    apg -M ncl -m 30 -x 30 -n 1
#
  jessie-rtpreempt-amd64-vm1: *bspasswd*
  jessie-rtpreempt-i386-vm1: *bspasswd*
  jessie-xenomai-amd64-vm1: *bspasswd*
  jessie-xenomai-i386-vm1: *bspasswd*
#  precise-rtpreempt-amd64-vm1: *bspasswd*
#  precise-rtpreempt-i386-vm1: *bspasswd*
#  precise-xenomai-amd64-vm1: *bspasswd*
#  precise-xenomai-i386-vm1: *bspasswd*
  raring-xenomai-amd64-vm1: *bspasswd*
  raring-xenomai-i386-vm1: *bspasswd*
#  raring-rtpreempt-amd64-vm1: *bspasswd*
#  raring-rtpreempt-i386-vm1: *bspasswd*
  wheezy-xenomai-amd64-vm1: *bspasswd*
  wheezy-xenomai-i386-vm1: *bspasswd*
  wheezy-rtpreempt-amd64-vm1: *bspasswd*
  wheezy-rtpreempt-i386-vm1: *bspasswd*
  wheezy-xenomai-armv7l-bbb1: *bspasswd*
#  sl6-rtpreempt-i386-vm1: *bspasswd*
#  sl6-rtpreempt-amd64-vm1: *bspasswd*
#  sl6-xenomai-i386-vm1: *bspasswd*
#  sl6-xenomai-amd64-vm1: *bspasswd*
#  fc18-rtpreempt-i386-vm1: *bspasswd*
#  fc18-rtpreempt-amd64-vm1: *bspasswd*
#  fc18-xenomai-i386-vm1: *bspasswd*
#  fc18-xenomai-amd64-vm1: *bspasswd*
#  fc19-xenomai-i386-vm1: *bspasswd*
#  fc19-xenomai-amd64-vm1: *bspasswd*
#  fc19-rtpreempt-i386-vm1: *bspasswd*
#  fc19-rtpreempt-amd64-vm1: *bspasswd*
#  fc19-rtpreempt-armv7l-bbb1: *bspasswd*
#  fc20-xenomai-i386-vm1: *bspasswd*
#  fc20-xenomai-amd64-vm1: *bspasswd*
#  fc20-rtpreempt-i386-vm1: *bspasswd*
#  fc20-rtpreempt-amd64-vm1: *bspasswd*
#  fc20-rtpreempt-armv7l-bbb1: *bspasswd*

# builder configuration name -> build slave list map
# builder configs whose hosts are all commented out above may be defined,
# and will be skipped
builderconfigs:
  jessie-rtpreempt-amd64:
    - jessie-rtpreempt-amd64-vm1
  jessie-rtpreempt-i386:
    - jessie-rtpreempt-i386-vm1
  jessie-xenomai-amd64:
    - jessie-xenomai-amd64-vm1
  jessie-xenomai-i386:
    - jessie-xenomai-i386-vm1
  precise-rtpreempt-amd64:
    - precise-rtpreempt-amd64-vm1
  precise-rtpreempt-i386:
    - precise-rtpreempt-i386-vm1
  precise-xenomai-amd64:
    - precise-xenomai-amd64-vm1
  precise-xenomai-i386:
    - precise-xenomai-i386-vm1
  raring-xenomai-amd64:
    - raring-xenomai-amd64-vm1
  raring-xenomai-i386:
    - raring-xenomai-i386-vm1
  raring-rtpreempt-amd64:
    - raring-rtpreempt-amd64-vm1
  raring-rtpreempt-i386:
    - raring-rtpreempt-i386-vm1
  wheezy-xenomai-amd64:
    - wheezy-xenomai-amd64-vm1
  wheezy-rtpreempt-amd64:
    - wheezy-rtpreempt-amd64-vm1
  wheezy-xenomai-i386:
    - wheezy-xenomai-i386-vm1
  wheezy-rtpreempt-i386:
    - wheezy-rtpreempt-i386-vm1
  wheezy-xenomai-armv7l:
    - wheezy-xenomai-armv7l-bbb1
  fc18-posix-i386:
    - fc18-i386-xenomai-vm1
    - fc18-i386-rtpreempt-vm1
  fc18-posix-amd64:
    - fc18-amd64-xenomai-vm1
    - fc18-amd64-rtpreempt-vm1
  fc19-posix-i386:
    - fc19-i386-xenomai-vm1
    - fc19-i386-rtpreempt-vm1
  fc19-posix-amd64:
    - fc19-amd64-xenomai-vm1
    - fc19-amd64-rtpreempt-vm1
  sl6-posix-i386:
    - sl6-i386-xenomai-vm1
    - sl6-i386-rtpreempt-vm1
  sl6-posix-amd64:
    - sl6-amd64-xenomai-vm1
    - sl6-amd64-rtpreempt-vm1
  fc18-rtpreempt-i386:
    - fc18-i386-rtpreempt-vm1
  fc18-rtpreempt-amd64:
    - fc18-amd64-rtpreempt-vm1
  fc19-rtpreempt-i386:
    - fc19-i386-rtpreempt-vm1
  fc19-rtpreempt-amd64:
    - fc19-amd64-rtpreempt-vm1
  sl6-rtpreempt-i386:
    - sl6-i386-rtpreempt-vm1
  sl6-rtpreempt-amd64:
    - sl6-amd64-rtpreempt-vm1
  fc18-xenomai-i386:
    - fc18-i386-xenomai-vm1
  fc18-xenomai-amd64:
    - fc18-amd64-xenomai-vm1
  fc19-xenomai-i386:
    - fc19-i386-xenomai-vm1
  fc19-xenomai-amd64:
    - fc19-amd64-xenomai-vm1
  sl6-xenomai-i386:
    - sl6-i386-xenomai-vm1
  sl6-xenomai-amd64:
    - sl6-amd64-xenomai-vm1
  fc18-xenomai_kernel-i386:
    - fc18-i386-xenomai-vm1
  fc18-xenomai_kernel-amd64:
    - fc18-amd64-xenomai-vm1
  fc19-xenomai_kernel-i386:
    - fc19-i386-xenomai-vm1
  fc19-xenomai_kernel-amd64:
    - fc19-amd64-xenomai-vm1
  sl6-xenomai_kernel-i386:
    - sl6-i386-xenomai-vm1
  sl6-xenomai_kernel-amd64:
    - sl6-amd64-xenomai-vm1

# user ID -> password map
auth:
  user1: *bspasswd*
