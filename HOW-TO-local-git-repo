Upstream git repos are usually on the other side of a low-bandwidth
connection.  In this case it is desirable to run just one mirror
across the slow link, and configure slaves to fetch from the local
mirror over the fast local network during a build.

In the config.yaml file (see the sample 'config.yaml.sample'), create
a configuration in the 'changesources' section of type
'multi-multi-git-poller'.  It must have a username in the 'user'
parameter that matches an entry in the 'auth' section.

One or more remote git repositories may be configured here.  Each
repository may have these parameters:

  remote:  The URL of the remote git repo

  dir:  The path to the directory on the build master where the remote
  git repo will be mirrored.  This directory should be writable by the
  user who owns the poller cron job, and readable by apache.

  local-remote: A URL that must be accessible to the build slaves
  exposing the local repo mirror in the 'git' directory.  See below
  for a sample Apache configuration.

  revlink: (optional) A URL pattern that, when the '%s' substring is
  replaced with a SHA1 revision, points to the commit in the remote
  git repo's web interface.  The sample config file contains examples
  for github and gitweb.

  only-ancestors-of: (optional) An ancestor revision that incoming
  changes will be checked against; if the incoming change is not a
  descendant of the revision, it will be ignored.  This is used to
  filter out 'Unified Build Candidate' branches in this example, whose
  build factories are different from other branches.

A cron job must be set up to run the 'post-receive.py' script
periodically, e.g. every five minutes.  That script reads
configuration from the config.yaml file.  When it runs, it will
attempt to create any repo mirror that does not already exist.  For
existing repo mirrors, it will run 'git fetch' to update the local
mirror, and feed any updates to the build master.  Here is a sample
crontab that may be run as the 'buildbot' or any other user, and polls
remote repos every five minutes:

  SHELL=/bin/sh

  SCRIPT=/home/buildbot/lcnc-buildbot/post-receive.py
  LOG=/home/buildbot/log/git-post-receive.log
  CONFIG=/home/buildbot/lcnc-buildbot/config.yaml

  0-59/5 * * * * python $SCRIPT -f $CONFIG -l $LOG -vv

The local build master runs a web server exposing the local
repos.  The below Apache configuration follows the sample config, where
the change source 'workdir' is /home/buildbot/git-repos:

  Alias /git /home/buildbot/git-repos
  <Directory /home/buildbot/git-repos>
        Options Indexes
        Order Allow,Deny
        Allow from all
  </Directory>

